package rules

import com.sbnz.crcalculator.facts.Monster;
import com.sbnz.crcalculator.facts.Action;
import com.sbnz.crcalculator.facts.Attack;

rule "Determine strength attack bonus"
no-loop true
    when
        $m: Monster($actions: actions, strength.abilityModifier != null) @Watch(!actions, challengeRating)
        Action($attacks: attacks) from $actions
        $attack: Attack(relevantAbility.name().equalsIgnoreCase("STRENGTH")) from $attacks
    then
        System.out.println("Determine strength attack bonus fired");
        $attack.setAttackBonus($m.getStrength().getAbilityModifier() + $m.getProficiencyBonus());
        modify ($m) { setActions($actions) };
end

rule "Determine dexterity attack bonus"
no-loop true
    when
        $m: Monster($actions: actions, dexterity.abilityModifier != null) @Watch(!actions, challengeRating)
        Action($attacks: attacks) from $actions
        $attack: Attack(relevantAbility.name().equalsIgnoreCase("DEXTERITY")) from $attacks
    then
        System.out.println("Determine dexterity attack bonus fired");
        $attack.setAttackBonus($m.getDexterity().getAbilityModifier() + $m.getProficiencyBonus());
        modify ($m) { setActions($actions) };
end