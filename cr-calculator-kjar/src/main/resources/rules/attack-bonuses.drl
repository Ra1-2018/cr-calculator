package rules

import com.sbnz.crcalculator.facts.Monster;
import com.sbnz.crcalculator.facts.Action;
import com.sbnz.crcalculator.facts.Attack;
import com.sbnz.crcalculator.facts.AbilityName;

rule "Determine strength attack bonus"
no-loop true
    when
        $m: Monster($actions: actions, strength.abilityModifier != null) @Watch(!actions, challengeRating)
        Action($attacks: attacks) from $actions
        $attack: Attack(relevantAbility == AbilityName.STRENGTH, type == AttackType.ATTACK_ROLL) from $attacks
    then
        $attack.setAttackBonus($m.getStrength().getAbilityModifier() + $m.getProficiencyBonus());
        modify ($m) { setActions($actions) };
        System.out.println("Strength attack bonus calculated to " + $attack.getAttackBonus());
end

rule "Determine dexterity attack bonus"
no-loop true
    when
        $m: Monster($actions: actions, dexterity.abilityModifier != null) @Watch(!actions, challengeRating)
        Action($attacks: attacks) from $actions
        $attack: Attack(relevantAbility == AbilityName.DEXTERITY, type == AttackType.ATTACK_ROLL) from $attacks
    then
        $attack.setAttackBonus($m.getDexterity().getAbilityModifier() + $m.getProficiencyBonus());
        modify ($m) { setActions($actions) };
        System.out.println("Dexterity attack bonus calculated to " + $attack.getAttackBonus());
end

rule "Determine intelligence attack bonus"
no-loop true
    when
        $m: Monster($actions: actions, intelligence.abilityModifier != null) @Watch(!actions, challengeRating)
        Action($attacks: attacks) from $actions
        $attack: Attack(relevantAbility == AbilityName.INTELLIGENCE, type == AttackType.ATTACK_ROLL) from $attacks
    then
        $attack.setAttackBonus($m.getIntelligence().getAbilityModifier() + $m.getProficiencyBonus());
        modify ($m) { setActions($actions) };
        System.out.println("Intelligence attack bonus calculated to " + $attack.getAttackBonus());
end

rule "Determine wisdom attack bonus"
no-loop true
    when
        $m: Monster($actions: actions, wisdom.abilityModifier != null) @Watch(!actions, challengeRating)
        Action($attacks: attacks) from $actions
        $attack: Attack(relevantAbility == AbilityName.WISDOM, type == AttackType.ATTACK_ROLL) from $attacks
    then
        $attack.setAttackBonus($m.getWisdom().getAbilityModifier() + $m.getProficiencyBonus());
        modify ($m) { setActions($actions) };
        System.out.println("Wisdom attack bonus calculated to " + $attack.getAttackBonus());
end

rule "Determine charisma attack bonus"
no-loop true
    when
        $m: Monster($actions: actions, charisma.abilityModifier != null) @Watch(!actions, challengeRating)
        Action($attacks: attacks) from $actions
        $attack: Attack(relevantAbility == AbilityName.CHARISMA, type == AttackType.ATTACK_ROLL) from $attacks
    then
        $attack.setAttackBonus($m.getCharisma().getAbilityModifier() + $m.getProficiencyBonus());
        modify ($m) { setActions($actions) };
        System.out.println("Charisma attack bonus calculated to " + $attack.getAttackBonus());
end