package rules

import com.sbnz.crcalculator.facts.Monster;
import com.sbnz.crcalculator.facts.ChallengeRating;

query getOffensiveChallengeRating(Monster $m, ChallengeRating $cr)
	$m := Monster($actions: actions)
	Number($n: intValue) from accumulate(
		$action: Action() from $actions,
		max($action.getAverageDamage())
	)
	$a: Action(averageDamage == $n) from $actions
	ChallengeRating(minDamage <= $n, maxDamage >= $n, $o: ordinal, $ab: attackBonus)
	$cr:= ChallengeRating(ordinal == $o + ($a.getMostCommonAttackBonus() - $ab)/2)
end

query getDefensiveChallengeRating(Monster $m, ChallengeRating $cr)
	$m := Monster($hp: averageHitPoints)
	ChallengeRating(minHitPoints <= $hp, maxHitPoints >= $hp, $o: ordinal, $ac: armorClass)
	$cr:= ChallengeRating(ordinal == $o + ($m.getArmorClass() - $ac)/2)
end

query getChallengeRating(Monster $m, ChallengeRating $cr)
	getDefensiveChallengeRating($m, $defCr;)
	getOffensiveChallengeRating($m, $offCr;)
	$cr:= ChallengeRating(ordinal == ($defCr.getOrdinal() + $offCr.getOrdinal())/2);
end

rule "Determine challenge rating"
agenda-group "recalculate"
when
	$m: Monster()
	getChallengeRating($m, $cr;)
then
	System.out.println("Determine challenge rating fired");
	modify ($m) {setChallengeRating($cr)};
end