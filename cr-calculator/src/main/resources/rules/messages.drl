package rules

import com.sbnz.crcalculator.events.CalculationEvent;

declare ThreeConsecutiveMiscalculations
	@role(event)
end

rule "Three consecutive miscalculations"
agenda-group "messages"
	when
		$m: Monster(challengeRating.ordinal != expectedChallengeRating.ordinal)
		Number(intValue >= 2) from accumulate(
			$c: CalculationEvent(monster.expectedChallengeRating.ordinal != monster.challengeRating.ordinal, monster.expectedChallengeRating.ordinal == $m.expectedChallengeRating.ordinal)
		 	over window:time(1m),
		 	count($c)
		 )
	then
		System.out.println("Three consecutive miscalculations fired");
		insert(new ThreeConsecutiveMiscalculations());
end

rule "Armor class too great for expected challenge rating"
	agenda-group "messages"
		when
			ThreeConsecutiveMiscalculations()
			$m: Monster(challengeRating.ordinal > expectedChallengeRating.ordinal, defensiveChallengeRating != null, defensiveChallengeRating.ordinal > expectedChallengeRating.ordinal, armorClass > expectedChallengeRating.armorClass)
		then
			modify ($m) {setArmorClassMessage("Armor class is too great for expected challenge rating " + $m.getExpectedChallengeRating().getValue() + ".")};
			System.out.println("Armor class too great for expected challenge rating fired");
end
	
rule "Armor class too small for expected challenge rating"
	agenda-group "messages"
		when
			ThreeConsecutiveMiscalculations()
			$m: Monster(challengeRating.ordinal < expectedChallengeRating.ordinal, defensiveChallengeRating != null, defensiveChallengeRating.ordinal < expectedChallengeRating.ordinal, armorClass < expectedChallengeRating.armorClass)
		then
			modify ($m) {setArmorClassMessage("Armor class is too small for expected challenge rating " + $m.getExpectedChallengeRating().getValue() + ".")};
			System.out.println("Armor class too small for expected challenge rating fired");
end
	
rule "Hit points too great for expected challenge rating"
	agenda-group "messages"
		when
			ThreeConsecutiveMiscalculations()
			$m: Monster(challengeRating.ordinal > expectedChallengeRating.ordinal, defensiveChallengeRating != null, defensiveChallengeRating.ordinal > expectedChallengeRating.ordinal, averageHitPoints > expectedChallengeRating.maxHitPoints)
		then
			modify ($m) {setHitPointsMessage("Hit points are too great for expected challenge rating " + $m.getExpectedChallengeRating().getValue() + ".")};
			System.out.println("Hit points too great for expected challenge rating fired");
end
	
rule "Hit points too small for expected challenge rating"
	agenda-group "messages"
		when
			ThreeConsecutiveMiscalculations()
			$m: Monster(challengeRating.ordinal < expectedChallengeRating.ordinal, defensiveChallengeRating != null, defensiveChallengeRating.ordinal < expectedChallengeRating.ordinal, averageHitPoints < expectedChallengeRating.minHitPoints)
		then
			modify ($m) {setHitPointsMessage("Hit points are too small for expected challenge rating " + $m.getExpectedChallengeRating().getValue() + ".")};
			System.out.println("Hit points too small for expected challenge rating fired");
end

rule "Damage too great for expected challenge rating"
	agenda-group "messages"
		when
			ThreeConsecutiveMiscalculations()
			$m: Monster(challengeRating.ordinal > expectedChallengeRating.ordinal, offensiveChallengeRating != null, offensiveChallengeRating.ordinal > expectedChallengeRating.ordinal, $actions: actions)
			$action: Action(averageDamage > $m.getExpectedChallengeRating.getMaxDamage(), damageMessage == null) from $actions
		then
			$action.setDamageMessage("Damage is too great for expected challenge rating " + $m.getExpectedChallengeRating().getValue() + ".");
			modify ($m) {setActions($actions)};
			System.out.println("Damage too great for expected challenge rating fired");
end

rule "Damage too small for expected challenge rating"
	agenda-group "messages"
		when
			ThreeConsecutiveMiscalculations()
			$m: Monster(challengeRating.ordinal < expectedChallengeRating.ordinal, offensiveChallengeRating != null, offensiveChallengeRating.ordinal < expectedChallengeRating.ordinal, $actions: actions)
			$action: Action(averageDamage < $m.getExpectedChallengeRating.getMinDamage(), damageMessage == null) from $actions
		then
			$action.setDamageMessage("Damage is too small for expected challenge rating " + $m.getExpectedChallengeRating().getValue() + ".");
			modify ($m) {setActions($actions)};
			System.out.println("Damage too small for expected challenge rating fired");
end

rule "Attack bonus too great for expected challenge rating"
	agenda-group "messages"
		when
			ThreeConsecutiveMiscalculations()
			$m: Monster(challengeRating.ordinal > expectedChallengeRating.ordinal, offensiveChallengeRating != null, offensiveChallengeRating.ordinal > expectedChallengeRating.ordinal, $actions: actions)
			Action($ab: mostCommonAttackBonus, $attacks: attacks) from $actions
			$attack: Attack(attackBonus == $ab, attackBonus > $m.getExpectedChallengeRating.getAttackBonus(), attackBonusMessage == null) from $attacks
		then
			$attack.setAttackBonusMessage("Attack bonus is too great for expected challenge rating " + $m.getExpectedChallengeRating().getValue() + ". Consider reducing " +  $attack.getRelevantAbility().name().toLowerCase() + ".");
			modify ($m) {setActions($actions)};
			System.out.println("Attack bonus too great for expected challenge rating fired");
end

rule "Attack bonus too small for expected challenge rating"
	agenda-group "messages"
		when
			ThreeConsecutiveMiscalculations()
			$m: Monster(challengeRating.ordinal < expectedChallengeRating.ordinal, offensiveChallengeRating != null, offensiveChallengeRating.ordinal < expectedChallengeRating.ordinal, $actions: actions)
			Action($ab: mostCommonAttackBonus, $attacks: attacks) from $actions
			$attack: Attack(attackBonus == $ab, attackBonus < $m.getExpectedChallengeRating.getAttackBonus(), attackBonusMessage == null) from $attacks
		then
			$attack.setAttackBonusMessage("Attack bonus is too small for expected challenge rating " + $m.getExpectedChallengeRating().getValue() + ". Consider increasing " + $attack.getRelevantAbility().name().toLowerCase() + ".");
			modify ($m) {setActions($actions)};
			System.out.println("Attack bonus too small for expected challenge rating fired");
end